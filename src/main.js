// Generated by CoffeeScript 1.6.3
(function() {
  var search;

  search = function(site, keyword) {
    var words;
    words = keyword.split(" ").map(function(word) {
      return word.toLowerCase();
    });
    return words.every(function(word) {
      return site.name.toLowerCase().indexOf(word) >= 0;
    });
  };

  define(function(require, exports) {
    var Ractive, app, listTmpl, sites;
    require("src/focus");
    sites = require("src/sites");
    Ractive = require("Ractive");
    listTmpl = require("text!view/list.mustache");
    app = new Ractive({
      el: '#app',
      template: listTmpl,
      data: {
        cursor: 0,
        keyword: "",
        results: sites,
        classShow: function(show) {
          switch (show) {
            case true:
              return "show";
            case false:
              return "";
            default:
              return "";
          }
        },
        showCursor: function(num, cursor) {
          switch (false) {
            case num !== cursor:
              return "cursor";
            default:
              return "";
          }
        }
      }
    });
    return app.observe("keyword", function(keyword) {
      var count;
      count = 0;
      Object.keys(sites).map(function(id) {
        var show, site;
        site = sites[id];
        show = search(site, keyword);
        app.set("results." + id + ".show", show);
        if (show) {
          return count++;
        }
      });
      return app.set("count", count);
    });
  });

}).call(this);

/*
//@ sourceMappingURL=main.map
*/
